@page
@model TrafficLawDocumentRazor.Pages.UserPage.IndexModel
@using System.Security.Claims
@{
    ViewData["Title"] = "Users Management";
}

<div class="container mt-4">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        TempData.Remove("SuccessMessage");
    }
    
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        TempData.Remove("ErrorMessage");
    }

    <!-- Hero Section -->
    <div class="hero-section mb-4">
        <div class="row">
            <div class="col-lg-8 mx-auto text-center">
                <div class="mb-4">
                    <i class="bi bi-people-fill text-warning" style="font-size: 4rem;"></i>
                </div>
                <h1 class="display-4 fw-bold mb-3">Users Management</h1>
                <p class="lead mb-4">Manage all users and their information with comprehensive control and oversight.</p>
                <div class="d-flex justify-content-center gap-3">
                    <a asp-page="Create" class="btn btn-light btn-lg">
                        <i class="bi bi-plus-circle"></i> Create New User
                    </a>
                    <a href="#users-table" class="btn btn-outline-light btn-lg">
                        <i class="bi bi-table"></i> View All Users
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table Section -->
    <div id="users-table" class="mb-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="section-title">All Users</h2>
            <a asp-page="Create" class="btn btn-outline-primary">
                <i class="bi bi-plus-circle me-2"></i>Add New User
            </a>
        </div>

        <!-- Search and Filter Section -->
        <div class="feature-card mb-4">
            <div class="card-body">
                <form method="get" class="row g-3">
                    <!-- Name Search Input -->
                    <div class="col-md-3">
                        <label for="NameSearch" class="form-label fw-semibold text-dark">
                            <i class="bi bi-person me-2"></i>Search by Name
                        </label>
                        <input type="text" 
                               class="form-control" 
                               id="NameSearch" 
                               name="NameSearch" 
                               value="@Model.NameSearch" 
                               placeholder="Enter full name...">
                    </div>

                    <!-- Email Search Input -->
                    <div class="col-md-3">
                        <label for="EmailSearch" class="form-label fw-semibold text-dark">
                            <i class="bi bi-envelope me-2"></i>Search by Email
                        </label>
                        <input type="email" 
                               class="form-control" 
                               id="EmailSearch" 
                               name="EmailSearch" 
                               value="@Model.EmailSearch" 
                               placeholder="Enter email address...">
                    </div>

                    <!-- Role Filter -->
                    <div class="col-md-3">
                        <label for="RoleFilter" class="form-label fw-semibold text-dark">
                            <i class="bi bi-person-badge me-2"></i>Role
                        </label>
                        <select class="form-select" id="RoleFilter" name="RoleFilter">
                            @if (Model.RoleFilter == "All" || string.IsNullOrEmpty(Model.RoleFilter))
                            {
                                <option value="All" selected>All Roles</option>
                            }
                            else
                            {
                                <option value="All">All Roles</option>
                            }
                            
                            @if (Model.RoleFilter == "User")
                            {
                                <option value="User" selected>User</option>
                            }
                            else
                            {
                                <option value="User">User</option>
                            }

                            @if (Model.RoleFilter == "Staff")
                            {
                                <option value="Staff" selected>Staff</option>
                            }
                            else
                            {
                                <option value="Staff">Staff</option>
                            }
                            
                            @if (Model.RoleFilter == "Expert")
                            {
                                <option value="Expert" selected>Expert</option>
                            }
                            else
                            {
                                <option value="Expert">Expert</option>
                            }
                        </select>
                    </div>

                    <!-- Status Filter -->
                    <div class="col-md-3">
                        <label for="StatusFilter" class="form-label fw-semibold text-dark">
                            <i class="bi bi-toggle-on me-2"></i>Status
                        </label>
                        <select class="form-select" id="StatusFilter" name="StatusFilter">
                            @if (Model.StatusFilter == "All" || string.IsNullOrEmpty(Model.StatusFilter))
                            {
                                <option value="All" selected>All Status</option>
                            }
                            else
                            {
                                <option value="All">All Status</option>
                            }
                            
                            @if (Model.StatusFilter == "Active")
                            {
                                <option value="Active" selected>Active</option>
                            }
                            else
                            {
                                <option value="Active">Active</option>
                            }
                            
                            @if (Model.StatusFilter == "Inactive")
                            {
                                <option value="Inactive" selected>Inactive</option>
                            }
                            else
                            {
                                <option value="Inactive">Inactive</option>
                            }
                        </select>
                    </div>

                    <!-- Action Buttons -->
                    <div class="col-md-2 d-flex align-items-end">
                        <div class="d-grid gap-2 w-100">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-funnel me-2"></i>Filter
                            </button>
                            <a asp-page="./Index" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-clockwise me-2"></i>Clear
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- Results Summary -->
        @if (!string.IsNullOrEmpty(Model.NameSearch) || !string.IsNullOrEmpty(Model.EmailSearch) || (!string.IsNullOrEmpty(Model.RoleFilter) && Model.RoleFilter != "All") || (!string.IsNullOrEmpty(Model.StatusFilter) && Model.StatusFilter != "All"))
        {
            <div class="alert alert-info d-flex align-items-center mb-4" role="alert">
                <i class="bi bi-info-circle me-2"></i>
                <div>
                    <strong>Active Filters:</strong>
                    @if (!string.IsNullOrEmpty(Model.NameSearch))
                    {
                        <span class="badge bg-primary me-2">Name: "@Model.NameSearch"</span>
                    }
                    @if (!string.IsNullOrEmpty(Model.EmailSearch))
                    {
                        <span class="badge bg-info me-2">Email: "@Model.EmailSearch"</span>
                    }
                    @if (!string.IsNullOrEmpty(Model.RoleFilter) && Model.RoleFilter != "All")
                    {
                        <span class="badge bg-success me-2">Role: @Model.RoleFilter</span>
                    }
                    @if (!string.IsNullOrEmpty(Model.StatusFilter) && Model.StatusFilter != "All")
                    {
                        <span class="badge bg-warning me-2">Status: @Model.StatusFilter</span>
                    }
                    <span class="badge bg-secondary">@Model.UserList.TotalCount result(s)</span>
                </div>
            </div>
        }

        @if (Model.UserList.Items != null && Model.UserList.Items.Any())
        {
            <div class="feature-card">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th class="text-dark fw-semibold border-0">Full Name</th>
                                    <th class="text-dark fw-semibold border-0">Email</th>
                                    <th class="text-dark fw-semibold border-0">Role</th>
                                    <th class="text-dark fw-semibold border-0">Status</th>
                                    <th class="text-dark fw-semibold border-0">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var users in Model.UserList.Items)
                                {
                                    <tr>
                                        <td>
                                            <strong class="text-dark">@users.FullName</strong>
                                        </td>
                                        <td class="text-dark">@users.Email</td>
                                        <td>
                                            <span class="badge bg-primary text-white rounded-pill">@users.Role</span>
                                        </td>
                                        <td>
                                            @if (users.IsActive)
                                            {
                                                <span class="badge bg-success text-white rounded-pill">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary text-white rounded-pill">Inactive</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a asp-page="Edit" asp-route-id="@users.Id" class="btn btn-outline-primary btn-sm rounded-start action-btn d-flex align-items-center justify-content-center" style="min-width: 110px; width: 110px;">
                                                    <i class="bi bi-pencil me-1"></i>
                                                    <span>Edit</span>
                                                </a>
                                                <button type="button" class="btn btn-outline-danger btn-sm rounded-0 action-btn d-flex align-items-center justify-content-center" style="min-width: 110px; width: 110px;" onclick="openDeleteModal('@users.Id')">
                                                    <i class="bi bi-trash me-1"></i>
                                                    <span>Delete</span>
                                                </button>
                                                <form method="post" asp-page-handler="ToggleActive" class="d-inline-block align-top p-0 m-0" style="display:inline;">
                                                    <input type="hidden" name="ToggleRequest.Id" value="@users.Id" />
                                                    <input type="hidden" name="ToggleRequest.IsActive" value="@(users.IsActive ? "false" : "true")" />
                                                    <button type="submit" class="btn btn-outline-warning btn-sm rounded-end action-btn d-flex align-items-center justify-content-center" style="min-width: 110px; width: 110px; height: 38px; padding: 6px 12px;">
                                                        @if (users.IsActive)
                                                        {
                                                            <i class="bi bi-lock me-1"></i>
                                                            <span>Deactivate</span>
                                                        }
                                                        else
                                                        {
                                                            <i class="bi bi-unlock me-1"></i>
                                                            <span>Activate</span>
                                                        }
                                                    </button>
                                                </form>
                                            </div>

                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Pagination -->
            @if (Model.UserList.TotalPages > 1)
            {
                <nav aria-label="User management pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (Model.UserList.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link text-dark" asp-page="./Index" 
                                   asp-route-pageIndex="@(Model.UserList.PageNumber - 1)" 
                                   asp-route-pageSize="@Model.UserList.PageSize"
                                   asp-route-nameSearch="@Model.NameSearch"
                                   asp-route-emailSearch="@Model.EmailSearch"
                                   asp-route-roleFilter="@Model.RoleFilter"
                                   asp-route-statusFilter="@Model.StatusFilter">
                                    <i class="bi bi-chevron-left"></i> Previous
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, Model.UserList.PageNumber - 2); i <= Math.Min(Model.UserList.TotalPages, Model.UserList.PageNumber + 2); i++)
                        {
                            <li class="page-item @(i == Model.UserList.PageNumber ? "active" : "")">
                                <a class="page-link @(i == Model.UserList.PageNumber ? "bg-primary border-primary text-white" : "text-dark")" 
                                   asp-page="./Index" 
                                   asp-route-pageIndex="@i" 
                                   asp-route-pageSize="@Model.UserList.PageSize"
                                   asp-route-nameSearch="@Model.NameSearch"
                                   asp-route-emailSearch="@Model.EmailSearch"
                                   asp-route-roleFilter="@Model.RoleFilter"
                                   asp-route-statusFilter="@Model.StatusFilter">@i</a>
                            </li>
                        }

                        @if (Model.UserList.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link text-dark" asp-page="./Index" 
                                   asp-route-pageIndex="@(Model.UserList.PageNumber + 1)" 
                                   asp-route-pageSize="@Model.UserList.PageSize"
                                   asp-route-nameSearch="@Model.NameSearch"
                                   asp-route-emailSearch="@Model.EmailSearch"
                                   asp-route-roleFilter="@Model.RoleFilter"
                                   asp-route-statusFilter="@Model.StatusFilter">
                                    Next <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }

            <!-- Delete Modal Container -->
            <div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-body p-0" id="deleteModalContent">
                            <!-- Content from Delete page will be loaded here -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- Page Size Selector -->
            <div class="text-center mt-4">
                <small class="text-muted">
                    Showing @((Model.UserList.PageNumber - 1) * Model.UserList.PageSize + 1) to
                    @Math.Min(Model.UserList.PageNumber * Model.UserList.PageSize, Model.UserList.TotalCount)
                    of @Model.UserList.TotalCount results
                </small>
                <div class="mt-3">
                    <span class="text-muted me-2">Items per page:</span>
                    <div class="btn-group btn-group-sm" role="group">
                        <a asp-page="./Index" 
                           asp-route-pageIndex="1" 
                           asp-route-pageSize="10" 
                           asp-route-nameSearch="@Model.NameSearch"
                           asp-route-emailSearch="@Model.EmailSearch"
                           asp-route-roleFilter="@Model.RoleFilter"
                           asp-route-statusFilter="@Model.StatusFilter"
                           class="btn btn-outline-primary @(Model.UserList.PageSize == 10 ? "active" : "")">10</a>
                        <a asp-page="./Index" 
                           asp-route-pageIndex="1" 
                           asp-route-pageSize="20" 
                           asp-route-nameSearch="@Model.NameSearch"
                           asp-route-emailSearch="@Model.EmailSearch"
                           asp-route-roleFilter="@Model.RoleFilter"
                           asp-route-statusFilter="@Model.StatusFilter"
                           class="btn btn-outline-primary @(Model.UserList.PageSize == 20 ? "active" : "")">20</a>
                        <a asp-page="./Index" 
                           asp-route-pageIndex="1" 
                           asp-route-pageSize="50" 
                           asp-route-nameSearch="@Model.NameSearch"
                           asp-route-emailSearch="@Model.EmailSearch"
                           asp-route-roleFilter="@Model.RoleFilter"
                           asp-route-statusFilter="@Model.StatusFilter"
                           class="btn btn-outline-primary @(Model.UserList.PageSize == 50 ? "active" : "")">50</a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center p-5 bg-light rounded-3">
                <i class="bi bi-people text-primary mb-3" style="font-size: 2rem;"></i>
                <h4 class="text-dark mb-3">No users found</h4>
                <p class="text-muted mb-4">Create your first user to get started.</p>
                <a asp-page="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle me-2"></i>Create First User
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
<script>
    function openDeleteModal(id) {
        const url = `/UserPage/Delete/${id}`;
        fetch(url)
            .then(response => response.text())
            .then(html => {
                document.getElementById('deleteModalContent').innerHTML = html;
                new bootstrap.Modal(document.getElementById('deleteModal')).show();
            })
            .catch(err => console.error("Failed to load modal:", err));
    }

    // Auto-submit form when filters change (optional - uncomment if you want this behavior)
    /*
    document.addEventListener('DOMContentLoaded', function() {
        const roleFilter = document.getElementById('RoleFilter');
        const statusFilter = document.getElementById('StatusFilter');
        
        roleFilter.addEventListener('change', function() {
            document.querySelector('form[method="get"]').submit();
        });
        
        statusFilter.addEventListener('change', function() {
            document.querySelector('form[method="get"]').submit();
        });
    });
    */

    // Add loading state to filter button
    document.addEventListener('DOMContentLoaded', function() {
        const filterForm = document.querySelector('form[method="get"]');
        const filterButton = filterForm.querySelector('button[type="submit"]');
        
        filterForm.addEventListener('submit', function() {
            filterButton.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Filtering...';
            filterButton.disabled = true;
        });
    });
</script>
}

@section Styles {
    <style>
        .action-btn {
            min-width: 110px;
            width: 110px;
            height: 38px;
            padding: 6px 12px;
        }
        .hero-section {
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            color: white;
            border-radius: 20px;
            padding: 60px 30px;
            margin-bottom: 50px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
        }
        
        .hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #ffd700, #ffed4e);
        }
        
        .feature-card {
            border: none;
            border-radius: 20px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
            overflow: hidden;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            border: none;
            border-radius: 12px;
            padding: 12px 30px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(30, 60, 114, 0.3);
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(30, 60, 114, 0.4);
        }
        
        .btn-outline-primary {
            border: 2px solid #1e3c72;
            border-radius: 12px;
            padding: 12px 30px;
            font-weight: 600;
            color: #1e3c72;
            transition: all 0.3s ease;
        }
        
        .btn-outline-primary:hover {
            background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
            border-color: transparent;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(30, 60, 114, 0.4);
        }
        
        .section-title {
            color: #1e3c72;
            font-weight: 600;
            position: relative;
            display: inline-block;
            margin-bottom: 30px;
        }
        
        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 60px;
            height: 3px;
            background: linear-gradient(90deg, #ffd700, #ffed4e);
        }
        
        .table th {
            border-top: none;
            font-weight: 600;
        }
        
        .btn-outline-danger:hover {
            background-color: #dc3545;
            border-color: #dc3545;
            color: #fff;
        }
        
        .spin {
            animation: spin 1s linear infinite;
        }
        
        @@keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        /* Search and Filter Styles */
        .form-control, .form-select {
            border-radius: 12px;
            border: 2px solid #e9ecef;
            transition: all 0.3s ease;
        }

        .form-control:focus, .form-select:focus {
            border-color: #1e3c72;
            box-shadow: 0 0 0 0.2rem rgba(30, 60, 114, 0.25);
        }

        .form-label {
            color: #1e3c72;
            font-weight: 600;
        }

        .btn-outline-secondary {
            border: 2px solid #6c757d;
            border-radius: 12px;
            color: #6c757d;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-outline-secondary:hover {
            background-color: #6c757d;
            border-color: #6c757d;
            color: white;
            transform: translateY(-2px);
        }
    </style>
}