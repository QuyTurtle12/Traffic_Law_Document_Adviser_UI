@page
@model TrafficLawDocumentRazor.Pages.News.Manage.IndexModel
@{
    ViewData["Title"] = "News Management";
}

<style>
    .management-header {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        color: white;
        border-radius: 20px;
        padding: 30px;
        margin-bottom: 30px;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
    }
    
    .management-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #ffd700, #ffed4e);
    }
    
    .btn-primary {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        border: none;
        border-radius: 12px;
        padding: 10px 20px;
        font-weight: 600;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(30, 60, 114, 0.3);
    }
    
    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(30, 60, 114, 0.4);
    }
    
    .btn-outline-secondary {
        border: 2px solid rgba(108, 117, 125, 0.2);
        color: #1e3c72;
        border-radius: 12px;
        padding: 10px 20px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .btn-outline-secondary:hover {
        background-color: #f8f9fa;
        border-color: rgba(30, 60, 114, 0.3);
        transform: translateY(-2px);
    }
    
    .data-card {
        border: none;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
    }
    
    .data-card .card-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-bottom: none;
        padding: 20px 25px;
    }
    
    .data-card .card-header h5 {
        color: #1e3c72;
        font-weight: 600;
        margin: 0;
    }
    
    .table {
        margin-bottom: 0;
    }
    
    .table thead {
        background-color: rgba(30, 60, 114, 0.03);
    }
    
    .table th {
        border-top: none;
        color: #1e3c72;
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.8rem;
        letter-spacing: 0.5px;
    }
    
    .table td {
        vertical-align: middle;
    }
    
    .table strong {
        color: #1e3c72;
        font-weight: 600;
    }
    
    .btn-sm {
        border-radius: 8px;
        font-weight: 500;
        padding: 5px 10px;
    }
    
    .btn-outline-primary {
        border: 1px solid #1e3c72;
        color: #1e3c72;
    }
    
    .btn-outline-warning {
        border: 1px solid #ffc107;
        color: #212529;
    }
    
    .btn-outline-danger {
        border: 1px solid #dc3545;
        color: #dc3545;
    }
    
    .btn-outline-primary:hover {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        border-color: transparent;
    }
    
    .btn-outline-warning:hover {
        background: linear-gradient(135deg, #ffc107 0%, #ffed4a 100%);
        border-color: transparent;
    }
    
    .btn-outline-danger:hover {
        background: linear-gradient(135deg, #dc3545 0%, #ef5350 100%);
        border-color: transparent;
    }
    
    .pagination {
        margin-top: 30px;
    }
    
    .page-item.active .page-link {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        border-color: #1e3c72;
    }
    
    .page-link {
        color: #1e3c72;
        border-radius: 8px;
        margin: 0 3px;
    }
    
    .btn-group-sm .btn {
        border-radius: 8px;
    }
    
    .empty-state {
        background-color: rgba(30, 60, 114, 0.05);
        border-radius: 20px;
        padding: 60px 30px;
        text-align: center;
    }
    
    .empty-state i {
        font-size: 3rem;
        color: #1e3c72;
        margin-bottom: 20px;
    }
    
    @@keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
    
    .spin {
        animation: spin 1s linear infinite;
    }
</style>

<div class="container mt-4">
    <div class="management-header">
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <i class="bi bi-newspaper text-warning" style="font-size: 2.5rem;"></i>
                </div>
                <h1 class="display-5 mb-2">News Management</h1>
                <p class="lead mb-0">Manage all news articles and content.</p>
            </div>
            <div class="col-md-6 d-flex align-items-center justify-content-md-end justify-content-center mt-4 mt-md-0">
                <div class="btn-group" role="group">
                    <a asp-page="Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i> Create New Article
                    </a>
                    <button type="button" class="btn btn-primary" onclick="syncNews()">
                        <i class="bi bi-arrow-clockwise me-2"></i> Sync News
                    </button>
                </div>
            </div>
        </div>
    </div>

    @if (Model.NewsList.Items != null && Model.NewsList.Items.Any())
    {
        <div class="data-card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5><i class="bi bi-list me-2"></i>All News Articles</h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Author</th>
                                <th>Published Date</th>
                                <th>Last Updated</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var news in Model.NewsList.Items)
                            {
                                <tr>
                                    <td>
                                        <strong>@news.Title</strong>
                                        <br>
                                        <small class="text-muted">
                                            @(news.Content?.Length > 100 ? news.Content.Substring(0, 100) + "..." : news.Content)
                                        </small>
                                    </td>
                                    <td>@news.Author</td>
                                    <td>@news.PublishedDate.ToString("MMM dd, yyyy")</td>
                                    <td>@(news.LastUpdatedTime?.ToString("MMM dd, yyyy") ?? "N/A")</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-page="View" asp-route-id="@news.Id" class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-eye"></i> View
                                            </a>
                                            <a asp-page="Edit" asp-route-id="@news.Id" class="btn btn-sm btn-outline-warning">
                                                <i class="bi bi-pencil"></i> Edit
                                            </a>
                                            <a asp-page="Delete" asp-route-id="@news.Id" class="btn btn-sm btn-outline-danger">
                                                <i class="bi bi-trash"></i> Delete
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Pagination -->
        @if (Model.NewsList.TotalPages > 1)
        {
            <nav aria-label="News management pagination" class="mt-3">
                <ul class="pagination justify-content-center">
                    @if (Model.NewsList.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.NewsList.PageNumber - 1)" asp-route-pageSize="@Model.NewsList.PageSize">
                                <i class="bi bi-chevron-left"></i> Previous
                            </a>
                        </li>
                    }

                    @for (int i = Math.Max(1, Model.NewsList.PageNumber - 2); i <= Math.Min(Model.NewsList.TotalPages, Model.NewsList.PageNumber + 2); i++)
                    {
                        <li class="page-item @(i == Model.NewsList.PageNumber ? "active" : "")">
                            <a class="page-link" asp-page="./Index" asp-route-pageIndex="@i" asp-route-pageSize="@Model.NewsList.PageSize">@i</a>
                        </li>
                    }

                    @if (Model.NewsList.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.NewsList.PageNumber + 1)" asp-route-pageSize="@Model.NewsList.PageSize">
                                Next <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }

        <!-- Page Size Selector -->
        <div class="text-center mt-3">
            <small class="text-muted">
                Showing @((Model.NewsList.PageNumber - 1) * Model.NewsList.PageSize + 1) to 
                @Math.Min(Model.NewsList.PageNumber * Model.NewsList.PageSize, Model.NewsList.TotalCount) 
                of @Model.NewsList.TotalCount results
            </small>
            <div class="mt-2">
                <span class="text-muted">Items per page:</span>
                <div class="btn-group btn-group-sm" role="group">
                    <a asp-page="./Index" asp-route-pageIndex="1" asp-route-pageSize="10" class="btn btn-outline-secondary @(Model.NewsList.PageSize == 10 ? "active" : "")">10</a>
                    <a asp-page="./Index" asp-route-pageIndex="1" asp-route-pageSize="20" class="btn btn-outline-secondary @(Model.NewsList.PageSize == 20 ? "active" : "")">20</a>
                    <a asp-page="./Index" asp-route-pageIndex="1" asp-route-pageSize="50" class="btn btn-outline-secondary @(Model.NewsList.PageSize == 50 ? "active" : "")">50</a>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="empty-state">
            <i class="bi bi-newspaper"></i>
            <h4>No news articles found</h4>
            <p>Create your first news article to get started.</p>
            <a asp-page="Create" class="btn btn-primary">Create First Article</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        function syncNews() {
            if (confirm('Are you sure you want to sync news from external API? This may take a few moments.')) {
                // Show loading state
                const syncBtn = event.target.closest('button');
                const originalText = syncBtn.innerHTML;
                syncBtn.innerHTML = '<i class="bi bi-arrow-clockwise spin me-2"></i> Syncing...';
                syncBtn.disabled = true;

                // Make API call to sync news
                fetch('/api/News/sync', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => {
                    if (response.ok) {
                        // Reload the page to show updated data
                        window.location.reload();
                    } else {
                        alert('Failed to sync news. Please try again.');
                        syncBtn.innerHTML = originalText;
                        syncBtn.disabled = false;
                    }
                })
                .catch(error => {
                    console.error('Error syncing news:', error);
                    alert('An error occurred while syncing news. Please try again.');
                    syncBtn.innerHTML = originalText;
                    syncBtn.disabled = false;
                });
            }
        }
    </script>
}